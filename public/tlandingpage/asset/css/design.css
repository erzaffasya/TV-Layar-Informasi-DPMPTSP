*{
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}
:root{

  --gird-width:30px;
  --gird-height:20px;
  --line-color:rgba(0,0,0,0.1);
  --dot-color: rgba(0,0,0,0.4);
  --dot-size:2px;
  --point-gap-width:calc(var(--gird-width) * 4);
  --point-gap-height:calc(var(--gird-height) * 4);
}
html, body{
	width: 100%!important;	
	height: 100%!important;
}
body{
  overflow: hidden;
}
#wrap-mpp{
  position: absolute;
  z-index: 99;
  top: 0;
  left: 0;
	width: 100%!important;
	height: 100%!important;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
}
nav.level img{
  max-height: none;
  height: 75px;
}
main{
	width: 100%;
	flex-grow: 2;
}

#main-mp .main-mp-btn{
  height: 75vh;
  white-space: normal;
  border: 1rem solid rgba(0,0,0,0.1);
  border-radius: 1.5rem;
  transform: none;
}
#main-mp .main-mp-btn:hover{
  transition: 0.5s;
  transform: scale(1.05);
  border: 0.5rem solid rgba(0,0,0,0.1);
}

#ly-mp .ly-mp-card{
  border-radius: 1rem;
  overflow: hidden;
  border: 1px solid rgba(0, 0, 0, 0.06);
}
#ly-mp .ly-mp-card figure{
  height: 100%;
  position: relative;
}
#ly-mp .ly-mp-card .ly-mp-img{
  height: inherit;
  object-fit: cover;
}
#ly-mp .ly-mp-card .ly-mp-logo{
  height: 40px;
  position: absolute;
  z-index: 99;
  left: .75rem;
  background: white;
  padding: 8px;
  bottom: .75rem;
  border-radius: 0.6rem;
}
#ly-mp .ly-mp-card .ly-mp-btn-dtl{
  border-radius: 0.6rem;
}

#si-mp .si-mp-card{
  border: 1px solid rgba(0, 0, 0, 0.06);
  border-radius: 2rem;
}
#si-mp .si-mp-card figure img{
  max-height: 3.5rem;
  filter: grayscale(1);
}

#detail-ly-mp .detail-ly-mp-card{
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 0.8rem;
}
#detail-ly-mp section.hero{
  border-top-left-radius: 0.8rem;
  border-top-right-radius: 0.8rem;
  overflow: hidden;
}
#detail-ly-mp section.hero div.hero-body{
  position: relative;
  overflow: hidden;
}

#detail-ly-mp section.hero div.hero-body img{
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
  object-fit: cover;
  object-position: bottom;
  opacity: 0.2;
  filter: grayscale(1);
}

#detail-ly-mp .detail-ly-mp-content {
  position: relative;
  top: -5rem;
}
#detail-ly-mp .detail-ly-mp-content .has-background-white{
  border-radius: 0.8rem;
  border: 1px solid lightgray;
}
#detail-si-mp iframe{
  border: none;
}
.tab-content {
  display: none;
}

.tab-content.current-tab {
  display: inherit;
}

footer{
	bottom: 0;
}
footer .btn-back{
  position: fixed;
  bottom: 1rem;
  left: 1rem;
  z-index: 99;
}

.grid-bg{
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.ba-grid{
  position: relative;
  z-index: 1;
  
  background-image: 
/*     radial-gradient(ellipse at center, #2883b6 0%, #084688 100%), */
    radial-gradient(ellipse at bottom left, rgba(255,255,255,0.4) 10%, rgba(255,255,255,0) 40%),
    linear-gradient(to bottom, rgba(255,255,255,.25), rgba(255,255,255,0.4)),
    /*linear-gradient(135deg, #fff, #fff);*/
}


.ba-grid:before,
.ba-grid:after,
.inner:before,
.inner:after{
  content:'';
  position: absolute;
  z-index: 1;
  top:0;
  bottom:0;
  left:0;
  right:0;
  mix-blend-mode: overlay;
}

.ba-grid:before{
  background-image: 
    linear-gradient(var(--line-color), transparent 1px),
    linear-gradient(to right, var(--line-color), transparent 1px);
  background-size:
    100% var(--gird-height),
    var(--gird-width) 100%;
}

.ba-grid:after{
  background-image: radial-gradient(var(--dot-color) 1px, transparent 1px);
  background-size: var(--point-gap-width) var(--point-gap-height);
  background-position: calc(var(--point-gap-width) / 2) calc(var(--point-gap-height) / 2);
}



.inner:before,
.inner:after{
  background-image: radial-gradient(var(--dot-color) var(--dot-size), transparent var(--dot-size));
  background-size: var(--point-gap-width) var(--point-gap-height);
  background-position: calc(var(--point-gap-width) / 2) calc(var(--point-gap-height) / 2);  

}

.inner:after{
  
  transform: scale(1.1, 1.1);
}

.inner:before{
/*   background-image: radial-gradient(var(--dot-color) calc(var(--dot-size) + 1px), transparent calc(var(--dot-size) + 1px)); */
  transform: scale(1.2, 1.2);
}

.anim:after{
  animation: 6.4s linear move infinite;
}

.anim .inner:after{
  animation: 3.2s linear move infinite;
}

.anim .inner:before{
  animation: 1.6s linear move infinite;
}

@keyframes move{
  0%{
    background-position:calc(var(--point-gap-width) / 2) calc(var(--point-gap-height) / 2);
  }
  100%{
    background-position:calc(var(--point-gap-width) / 2) calc(var(--point-gap-height) / 2 * -1);
  }
}